name: Multi-Arch Docker Build with Kaniko

on:
  push:

env:
  REGISTRY: docker.io
  IMAGE_NAME: carlochess2/shopping-app

jobs:
  build-and-push:
    runs-on: ${{ matrix.arch.runs-on }}
    strategy:
      matrix:
        arch: [{arch: amd64, runs-on: ubuntu-latest}, {arch: arm64, runs-on: ubuntu-24.04-arm}]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push with Kaniko
        uses: aevea/action-kaniko@master
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          image: ${{ env.IMAGE_NAME }}
          tag: ${{ github.sha }}-${{ matrix.arch.arch }}
          # build_file: ${{ matrix.arch.arch == 'amd64' && 'Dockerfile' || 'Dockerfile.arm64' }}
          build_file: 'Dockerfile'
          extra_args: --build-arg TARGETARCH=${{ matrix.arch.arch }} --custom-platform=linux/${{ matrix.arch.arch }}

  # # ---------------------------------------------------------------------------
  # # Create and push multi-arch manifest
  # # ---------------------------------------------------------------------------
  create-manifest:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push manifest
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64
          docker manifest annotate ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64 --arch amd64
          docker manifest annotate ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64 --arch arm64
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          # Also tag as latest if on main branch
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64
            docker manifest annotate ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64 --arch amd64
            docker manifest annotate ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64 --arch arm64
            docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          fi
